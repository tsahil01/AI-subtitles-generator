// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  web3Address   String         @unique
  premium       Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  subscriptions Subscription[]
  payments      Payment[]
  files         File[]
}

model Subscription {
  id        String             @id @default(cuid())
  userId    String
  plan      String
  status    SubscriptionStatus
  createdAt DateTime           @default(now())
  expiresAt DateTime
  paymentId String
  payment   Payment            @relation(fields: [paymentId], references: [id])
  user      User               @relation(fields: [userId], references: [id])
}

model Payment {
  id           String         @id @default(cuid())
  userId       String
  amount       Int
  status       paymentStatus
  createdAt    DateTime       @default(now())
  user         User           @relation(fields: [userId], references: [id])
  subscription Subscription[]
}

model File {
  id        String          @id @default(cuid())
  name      String
  url       String
  type      String
  size      Int?
  userId    String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  user      User            @relation(fields: [userId], references: [id])
  subtitles SubtitlesFile[]
}

model SubtitlesFile {
  id                   String            @id @default(cuid())
  name                 String
  url                  String
  fileId               String
  transcriptionJobName String
  transcriptionStatus  transactionStatus @default(PENDING)
  file                 File              @relation(fields: [fileId], references: [id])
}

enum paymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum transactionStatus {
  PENDING
  SUCCESS
  FAILED
}

enum SubscriptionStatus {
  ACTIVE
  CANCELED
  EXPIRED
}
